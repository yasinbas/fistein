version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fistein-postgres
    environment:
      POSTGRES_DB: fistein
      POSTGRES_USER: ${DATABASE_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migration/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - fistein-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fistein-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/fistein
      DATABASE_USERNAME: ${DATABASE_USERNAME:-postgres}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-password}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here-change-in-production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      RATE_LIMIT_REQUESTS_PER_MINUTE: ${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}
      RATE_LIMIT_BURST_CAPACITY: ${RATE_LIMIT_BURST_CAPACITY:-100}
      SSL_ENABLED: ${SSL_ENABLED:-false}
      SSL_KEY_STORE: ${SSL_KEY_STORE:-}
      SSL_KEY_STORE_PASSWORD: ${SSL_KEY_STORE_PASSWORD:-}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fistein-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend (if you have a frontend)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fistein-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - fistein-network
    environment:
      REACT_APP_API_URL: http://localhost:8080/api

volumes:
  postgres_data:

networks:
  fistein-network:
    driver: bridge